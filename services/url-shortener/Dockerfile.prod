# using python:3.9-slim, this is the first stage image also used as a runtime environment.
# This version is based on Alpine Linux, which is a minimal and lightweight distribution.
FROM python:3.9-slim

# this path represents the root directory for our python application inside the container
ENV APP_DIR /usr/local/src/url-shortener

# in production, we only copy the necessary source files
# as the other configurations will be provided externally.
# e.g. the RSA keys are generated by Helm and stored as a secret
COPY Pipfile* ${APP_DIR}/
COPY app.py ${APP_DIR}/
COPY url_shortener ${APP_DIR}/url_shortener

# this is equivalent to `cd $APP_DIR`
WORKDIR ${APP_DIR}

# update apt repositories and install pipenv for package management
# (we use Pipfile to keep track of dependencies)
RUN apt-get update && apt-get install -y pipenv

# we install the dependencies at the system level (as this is the only
# application running on the VM) and we install gunicorn as a web server engine
RUN pipenv install --system --deploy && pip install gunicorn

# we expose 5000 as the service port
EXPOSE 5000

# we run the application bound to all interfaces (i.e. 0.0.0.0) so that it can be targeted
# by external services. Additionally, we use the '--reload' flag during development
# to avoid rebuilding the image every time we change the source code.
CMD [ "gunicorn", "--bind", "0.0.0.0:5000", "app:app" ]