apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service-deployment
  namespace: "{{ .Values.namespace | default "default" }}"
  labels:
    app: auth-service-app
spec:
  replicas: {{ .Values.auth.replicas }}
  selector:
    matchLabels:
      app: auth-service-app
  template:
    metadata:
      labels:
        app: auth-service-app
    spec:
      initContainers:
        - name: init-auth-service-database-container
          image: busybox
          command: ['sh', '-c', "until nslookup auth-database; do echo waiting for auth-database; sleep 2; done"]
      containers:
        - name: auth-service-container
          image: "docker.io/marinoandrea/wscbs-auth-service:{{ .Values.auth.imageVersion | default "latest" }}"
          ports:
            - containerPort: {{ .Values.auth.containerPort | default 5000 }}
          # make the secret available as a file to access for the pod as suggested in the Kubernetes document.
          volumeMounts:
            - name: auth-secret-volume
              readOnly: true
              # the directory which secret stored
              mountPath: "/etc/rsa"
          env:
            - name: RSA_PRIVATE_PATH
              value: "/etc/rsa/rsa-privatekey"
            - name: PASSWORD_SALT
              # get the password-salt value from auth-secret
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  key: password-salt
      volumes:
        # Add a volume in which secret.secretName is the same as the name defined in the auth-secret.yaml
        - name: auth-secret-volume
          secret:
            secretName: auth-secret
